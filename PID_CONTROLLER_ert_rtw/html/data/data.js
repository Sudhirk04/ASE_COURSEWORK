var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"PID_CONTROLLER","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Main file","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"PID_CONTROLLER.h\"            /* Model's header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  PID_CONTROLLER_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example \"main\" function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific.  This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  PID_CONTROLLER_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 0.01 seconds (the model's base sample time) here.  The\r\n   * call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (1) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  /* The option 'Remove error status field in real-time model data structure'\r\n   * is selected, therefore the following code does not need to execute.\r\n   */\r\n#if 0\r\n\r\n  /* Disable rt_OneStep here */\r\n  /* Terminate model */\r\n  PID_CONTROLLER_terminate();\r\n\r\n#endif\r\n\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_CONTROLLER.c","type":"source","group":"model","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_CONTROLLER.c\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"PID_CONTROLLER.h\"\r\n#include \"PID_CONTROLLER_private.h\"\r\n\r\n/* Block signals and states (default storage) */\r\nDW_PID_CONTROLLER_T PID_CONTROLLER_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU_PID_CONTROLLER_T PID_CONTROLLER_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY_PID_CONTROLLER_T PID_CONTROLLER_Y;\r\n\r\n/* Model step function */\r\nvoid PID_CONTROLLER_step(void)\r\n{\r\n  /* Sum: '<Root>/Sum' incorporates:\r\n   *  Gain: '<Root>/Intregal_Gain'\r\n   *  Gain: '<Root>/Time'\r\n   *  Inport: '<Root>/ek'\r\n   *  UnitDelay: '<Root>/Unit Delay'\r\n   */\r\n  PID_CONTROLLER_DW.UnitDelay_DSTATE += 40.0 * PID_CONTROLLER_U.ek * 0.01;\r\n\r\n  /* Saturate: '<Root>/Sat_I' */\r\n  if (PID_CONTROLLER_DW.UnitDelay_DSTATE > 7000.0) {\r\n    /* Sum: '<Root>/Sum' */\r\n    PID_CONTROLLER_DW.UnitDelay_DSTATE = 7000.0;\r\n  } else if (PID_CONTROLLER_DW.UnitDelay_DSTATE < 0.0) {\r\n    /* Sum: '<Root>/Sum' */\r\n    PID_CONTROLLER_DW.UnitDelay_DSTATE = 0.0;\r\n  }\r\n\r\n  /* End of Saturate: '<Root>/Sat_I' */\r\n\r\n  /* Outport: '<Root>/Con_Output' incorporates:\r\n   *  Gain: '<Root>/Proportional_Gain'\r\n   *  Inport: '<Root>/ek'\r\n   *  Sum: '<Root>/Sum1'\r\n   *  UnitDelay: '<Root>/Unit Delay'\r\n   */\r\n  PID_CONTROLLER_Y.Con_Output = 800.0 * PID_CONTROLLER_U.ek +\r\n    PID_CONTROLLER_DW.UnitDelay_DSTATE;\r\n\r\n  /* Update for UnitDelay: '<Root>/Unit_Delay_D' incorporates:\r\n   *  Inport: '<Root>/ek'\r\n   */\r\n  PID_CONTROLLER_DW.Unit_Delay_D_DSTATE = PID_CONTROLLER_U.ek;\r\n}\r\n\r\n/* Model initialize function */\r\nvoid PID_CONTROLLER_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/* Model terminate function */\r\nvoid PID_CONTROLLER_terminate(void)\r\n{\r\n  /* (no terminate code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_CONTROLLER.h","type":"header","group":"model","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_CONTROLLER.h\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_CONTROLLER_h_\r\n#define RTW_HEADER_PID_CONTROLLER_h_\r\n#ifndef PID_CONTROLLER_COMMON_INCLUDES_\r\n#define PID_CONTROLLER_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* PID_CONTROLLER_COMMON_INCLUDES_ */\r\n\r\n#include \"PID_CONTROLLER_types.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T UnitDelay_DSTATE;             /* '<Root>/Unit Delay' */\r\n  real_T Unit_Delay_D_DSTATE;          /* '<Root>/Unit_Delay_D' */\r\n} DW_PID_CONTROLLER_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T ek;                           /* '<Root>/ek' */\r\n} ExtU_PID_CONTROLLER_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T Con_Output;                   /* '<Root>/Con_Output' */\r\n} ExtY_PID_CONTROLLER_T;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW_PID_CONTROLLER_T PID_CONTROLLER_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU_PID_CONTROLLER_T PID_CONTROLLER_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY_PID_CONTROLLER_T PID_CONTROLLER_Y;\r\n\r\n/* Model entry point functions */\r\nextern void PID_CONTROLLER_initialize(void);\r\nextern void PID_CONTROLLER_step(void);\r\nextern void PID_CONTROLLER_terminate(void);\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'PID_CONTROLLER'\r\n */\r\n#endif                                 /* RTW_HEADER_PID_CONTROLLER_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_CONTROLLER_private.h","type":"header","group":"model","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_CONTROLLER_private.h\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_CONTROLLER_private_h_\r\n#define RTW_HEADER_PID_CONTROLLER_private_h_\r\n#include \"rtwtypes.h\"\r\n#endif                                /* RTW_HEADER_PID_CONTROLLER_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_CONTROLLER_types.h","type":"header","group":"model","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_CONTROLLER_types.h\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_CONTROLLER_types_h_\r\n#define RTW_HEADER_PID_CONTROLLER_types_h_\r\n\r\n/* Model Code Variants */\r\n#endif                                 /* RTW_HEADER_PID_CONTROLLER_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'PID_CONTROLLER'.\r\n *\r\n * Model version                  : 1.43\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Dec  3 20:03:18 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objective: RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: Intel->x86-64 (Windows64)\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"PID_CONTROLLER\",\"sources\":[\"PID_CONTROLLER.c\",\"PID_CONTROLLER.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"PID_CONTROLLER\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[33,3,33,9],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[33,10,33,26],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[33,26,33,27],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[34,3,34,9],\"els\":[\"1:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[34,10,34,29],\"els\":[\"1:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[34,29,34,30],\"els\":[\"1:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[39,3,39,9],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[39,10,39,12],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[39,12,39,13],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[44,3,44,9],\"els\":[\"1:10\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[44,10,44,20],\"els\":[\"1:10\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[44,20,44,21],\"els\":[\"1:10\"],\"ct\":{\"1\":1,\"0\":3}}]},\"0\":{\"records\":[{\"tk\":[41,3,41,20],\"els\":[\"0:5\"]},{\"tk\":[41,21,41,37],\"els\":[\"0:5\"]},{\"tk\":[41,38,41,40],\"els\":[\"0:5\"]},{\"tk\":[41,41,41,45],\"els\":[\"0:3\"]},{\"tk\":[41,46,41,47],\"els\":[\"0:3\"]},{\"tk\":[41,48,41,64],\"els\":[\"0:1\"]},{\"tk\":[41,65,41,67],\"els\":[\"0:1\"]},{\"tk\":[41,68,41,69],\"els\":[\"0:12\"]},{\"tk\":[41,70,41,74],\"els\":[\"0:12\"]},{\"tk\":[44,3,44,5],\"els\":[\"0:11\"]},{\"tk\":[44,7,44,24],\"els\":[\"0:11\"]},{\"tk\":[44,25,44,41],\"els\":[\"0:11\"]},{\"tk\":[44,42,44,43],\"els\":[\"0:11\"]},{\"tk\":[44,44,44,50],\"els\":[\"0:11\"]},{\"tk\":[46,5,46,22],\"els\":[\"0:5\"]},{\"tk\":[46,23,46,39],\"els\":[\"0:5\"]},{\"tk\":[46,40,46,41],\"els\":[\"0:5\",\"0:11\"]},{\"tk\":[46,42,46,48],\"els\":[\"0:11\"]},{\"tk\":[47,10,47,12],\"els\":[\"0:11\"]},{\"tk\":[47,14,47,31],\"els\":[\"0:11\"]},{\"tk\":[47,32,47,48],\"els\":[\"0:11\"]},{\"tk\":[47,49,47,50],\"els\":[\"0:11\"]},{\"tk\":[47,51,47,54],\"els\":[\"0:11\"]},{\"tk\":[49,5,49,22],\"els\":[\"0:5\"]},{\"tk\":[49,23,49,39],\"els\":[\"0:5\"]},{\"tk\":[49,40,49,41],\"els\":[\"0:5\",\"0:11\"]},{\"tk\":[49,42,49,45],\"els\":[\"0:11\"]},{\"tk\":[60,3,60,19],\"els\":[\"0:10\"]},{\"tk\":[60,20,60,30],\"els\":[\"0:10\"]},{\"tk\":[60,31,60,32],\"els\":[\"0:10\"]},{\"tk\":[60,33,60,38],\"els\":[\"0:4\"]},{\"tk\":[60,39,60,40],\"els\":[\"0:4\"]},{\"tk\":[60,41,60,57],\"els\":[\"0:1\"]},{\"tk\":[60,58,60,60],\"els\":[\"0:1\"]},{\"tk\":[60,61,60,62],\"els\":[\"0:6\"]},{\"tk\":[61,5,61,22],\"els\":[\"0:6\",\"0:14\"]},{\"tk\":[61,23,61,39],\"els\":[\"0:6\",\"0:14\"]},{\"tk\":[66,3,66,20],\"els\":[\"0:9\"]},{\"tk\":[66,21,66,40],\"els\":[\"0:9\"]},{\"tk\":[66,41,66,42],\"els\":[\"0:9\"]},{\"tk\":[66,43,66,59],\"els\":[\"0:1\"]},{\"tk\":[66,60,66,62],\"els\":[\"0:1\"]}]}}}","blocks":[{"RTWName":"<Root>/ek","SIDString":"PID_CONTROLLER:1"},{"RTWName":"<Root>/Derivative_Gain","SIDString":"PID_CONTROLLER:2"},{"RTWName":"<Root>/Gain1","SIDString":"PID_CONTROLLER:13"},{"RTWName":"<Root>/Intregal_Gain","SIDString":"PID_CONTROLLER:3"},{"RTWName":"<Root>/Proportional_Gain","SIDString":"PID_CONTROLLER:4"},{"RTWName":"<Root>/Sat_I","SIDString":"PID_CONTROLLER:11"},{"RTWName":"<Root>/Sum","SIDString":"PID_CONTROLLER:5"},{"RTWName":"<Root>/Sum1","SIDString":"PID_CONTROLLER:6"},{"RTWName":"<Root>/Sum2","SIDString":"PID_CONTROLLER:7"},{"RTWName":"<Root>/Time","SIDString":"PID_CONTROLLER:12"},{"RTWName":"<Root>/Unit Delay","SIDString":"PID_CONTROLLER:14"},{"RTWName":"<Root>/Unit_Delay_D","SIDString":"PID_CONTROLLER:9"},{"RTWName":"<Root>/Con_Output","SIDString":"PID_CONTROLLER:10"}],"cm":{"GlobalVarInfo":[{"Name":"PID_CONTROLLER_DW","Size":16,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":8,"Members":[{"Name":"UnitDelay_DSTATE","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":7,"Members":[],"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":7}},{"Name":"Unit_Delay_D_DSTATE","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":1}}],"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":8}},{"Name":"PID_CONTROLLER_U","Size":8,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":3,"Members":{"Name":"ek","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":3}},"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":3}},{"Name":"PID_CONTROLLER_Y","Size":8,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"Con_Output","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":1}},"UseInFunctions":{"FunctionName":"PID_CONTROLLER_step","UseCount":1}}],"GlobalConstInfo":[],"FcnInfo":[{"Name":"PID_CONTROLLER_initialize","UniqueKey":"$PID_CONTROLLER_initialize","Idx":1,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"PID_CONTROLLER_step","UniqueKey":"$PID_CONTROLLER_step","Idx":2,"NumCommentLines":19,"NumTotalLines":35,"NumCodeLines":9,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":0,"Complexity":3,"StackTotal":0,"CalleeIdx":[]},{"Name":"PID_CONTROLLER_terminate","UniqueKey":"$PID_CONTROLLER_terminate","Idx":3,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["G:\\matlab\\ASE_COURSEWORK\\PID_CONTROLLER_ert_rtw\\PID_CONTROLLER.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]}]},"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}]};